cache.yml設定ファイル
====================

`cache.yml`設定ファイルはビューレイヤー用のキャッシュ設定を記述します。
この設定ファイルは`settings.yml`で
[`cache`](#chapter_04_cache)設定が有効な場合のみ有効です。

>**TIP**
>クラスの設定はキャッシュのために使われ関連設定は
>[`view_cache_manager`](#chapter_05_view_cache_manager)と
>`factories.yml`設定ファイルの
>[`view_cache`](#chapter_05_view_cache)セクション
>で行われます。

アプリケーションが作成されるとき、symfonyはアプリケーションの`config/`ディレクトリで
デフォルトの`cache.yml`ファイルを生成します。このファイルはアプリケーション全体の
キャッシュを記述します(`default`キーの元で)。デフォルトでは、キャッシュはグローバルスコープで
`off`にセットされています:

    [yml]
    default:
      enabled:     off
      with_layout: false
      lifetime:    86400

>**TIP**
>デフォルトでは`enabled`設定は`false`にセットされるので、
>キャッシュを選り分けて有効にする必要があります。他の方法もあります:
>グローバルにキャッシュを有効にし、キャッシュできない特定のページでキャッシュを無効にします。
>どちらの方がアプリケーションの作業量が少ないのかによって
>選ぶ方法が決まります。

はじめの章で説明したように、`cache.yml`ファイルは
[**設定カスケードのメカニズム**](#chapter_03_configuration_cascade)の恩恵を受け、
[**定数**](#chapter_03_constants)を格納できます。

>**NOTE**
>`cache.yml`設定ファイルはPHPファイルとしてキャッシュされます;
>処理は`sfCacheConfigHandler`
>[クラス](#chapter_14_config_handlers_yml)によって自動的に管理されます。

アプリケーションのデフォルト設定はモジュールの`config/`ディレクトリで
`cache.yml`ファイルを作成することでモジュールのためにオーバーライドできます。
メインキーは`execute`の接頭辞無しのアクションの名前です(例えば
`executeIndex`メソッドに対して`index`)。名前にアンダースコア(`_`)の接頭辞を
つけることでパーシャルもしくはコンポーネントもキャッシュできます。

アクションがキャッシュされるかどうか決定するのに、symfonyは
次の順序で情報を探します:

  * 存在するのであれば、モジュールの設定ファイルでの、
    特定のアクション、パーシャル、コンポーネント用の設定;

  * 存在するのであれば、モジュールの設定ファイルでの
    モジュール全体用の設定(`all`キーの下);

  * アプリケーションのデフォルト設定(under the `default`キーの下)

>**CAUTION**
>クエリ文字列の`GET`パラメータでやってくる、
>`POST`、`PUT`、もしくは`DELETE`メソッドで投稿されたリクエストは
>設定に関わらずけっしてキャッシュされません。

`enabled`
---------

*デフォルト*: `off`

`enabled`設定は現在のスコープでのキャッシュを有効もしくは無効にします。

`with_layout`
---------------

*デフォルト*: `false`

`with_layout`設定はページ全体(`true`)、かアクションのみ(`false`)を
キャッシュするかを決定します。

>**NOTE**
>`with_layout`オプションはパーシャルとコンポーネントキャッシュには考慮されません。
>これらはレイアウトによってデコレートできないからです。

`lifetime`
------------

*デフォルト*: `86400`

`lifetime`設定はサーバーサイドキャッシュの寿命を
秒単位で定義します(`86400`秒は1日に等しい)。

`client_lifetime`
-------------------

*デフォルト*: `lifetime`の値と同じ

`client_lifetime`設定はクライアントサイドキャッシュの寿命を
秒単位で定義します。

既に`Last-Modified`もしくは`Expires`ヘッダーがセットされていない限り、
この設定は`Expires`ヘッダーと
`max-cache`キャッシュコントロール変数を自動的にセットするために使われます。

この値を`0`にセットすることでクライアントサイドキャッシュを無効にできます。

`contextual`
------------

*デフォルト*: `false`

`contextual`設定はキャッシュが現在のページのコンテキストに依存するかどうかを
決定します。設定はそれゆえパーシャルとコンポーネント用に
使われるときのみ意味があります。

インクルードされるテンプレートによってパーシャルの出力が異なるとき、
パーシャルはコンテキスト上(contextual)にあると言い、`contextual`設定は
`true`にセットされなければなりません。デフォルトでは、設定は`false`にセットされます。 
これはパーシャルとコンポーネントがインクルードされるときに
これらのための出力は常に同じであることを意味します。

>**NOTE**
>異なるパラメータのセットに対してキャッシュは明らかに異なります。
