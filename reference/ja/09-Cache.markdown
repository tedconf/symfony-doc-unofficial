cache.yml 設定ファイル
=====================

~`cache.yml`~ 設定ファイルではビューレイヤーのキャッシュコンフィギュレーションを記述します。この設定ファイルは `settings.yml` で [`cache`](#chapter_04_sub_cache) 設定が有効な場合のみアクティブになります。

>**TIP**
>クラスのコンフィギュレーションはキャッシュのために使われ関連コンフィギュレーションの変更は [`view_cache_manager`](#chapter_05_view_cache_manager) と `factories.yml` 設定ファイルの [`view_cache`](#chapter_05_view_cache) セクションで行います。

アプリケーションが作られるとき、symfony はアプリケーションの `config/` ディレクトリにデフォルトの `cache.yml` ファイルを生成します。このファイルはアプリケーション全体のキャッシュを記述します (`default` キーの下)。デフォルトでは、キャッシュはグローバルで `false` にセットされています:

    [yml]
    default:
      enabled:     false
      with_layout: false
      lifetime:    86400

>**TIP**
>デフォルトでは `enabled` 設定は `false` にセットされているので、キャッシュを個別に有効にする必要があります。ほかの方法もあります: グローバルキャッシュを有効にし、キャッシュする必要のない特定のページでキャッシュを無効にします。作業量が少ないほうを選ぶとよいでしょう。

[第3章](#chapter_03)で説明したように、`cache.yml` ファイルでは**コンフィギュレーションカスケードのメカニズム**が有効になり、**定数**を収めることができます。

>**NOTE**
>`cache.yml` 設定ファイルは PHP ファイルとしてキャッシュされます; 処理は ~`sfCacheConfigHandler`~ [クラス](#chapter_14_config_handlers_yml)によって自動管理されます。

モジュールの `config/` ディレクトリのなかで `cache.yml` ファイルを作ることでモモジュールのためにアプリケーションのデフォルトコンフィギュレーションをオーバーライドできます。メインキーはアクションの名前で接頭辞の `execute` をつけません (たとえば `executeIndex` メソッドであれば `index`)。名前に接頭辞のアンダースコア (`_`) をつけることでパーシャルもしくはコンポーネントもキャッシュできます。

アクションがキャッシュされるかどうかを決めるのに、symfony は次の順序で情報を探します:

  * 存在するのであれば、モジュール設定ファイルでの特定のアクション、パーシャル、コンポーネントのコンフィギュレーション;

  * 存在するのであれば、モジュール設定ファイルでのモジュール全体のコンフィギュレーション (`all` キーの下);

  * アプリケーションのデフォルトコンフィギュレーション (`default` キーの下)

>**CAUTION**
>コンフィギュレーションに関わらず、クエリ文字列の `GET` パラメータで送信されるリクエストや、`POST`、`PUT` もしくは `DELETE` メソッドで投稿されるリクエストはけっしてキャッシュされません。

~`enabled`~
-----------

*デフォルト*: `false`

`enabled` 設定は現在のスコープでのキャッシュを有効もしくは無効にします。

~`with_layout`~
---------------

*デフォルト*: `false`

`with_layout` 設定はキャッシュの対象をページ全体 (`true`) かアクションだけ (`false`) にするのかを決めます。

>**NOTE**
>`with_layout` オプションはパーシャルとコンポーネントキャッシュには考慮されません。これらはレイアウトによってデコレートできないからです。

~`lifetime`~
------------

*デフォルト*: `86400`

`lifetime` 設定はサーバーサイドキャッシュの有効期間を秒単位で定義します (`86400`秒は1日に等しい)。

~`client_lifetime`~
-------------------

*デフォルト*: `lifetime` の値と同じ

`client_lifetime` 設定はクライアントサイドキャッシュの有効期間を秒単位で定義します。

すでに `Last-Modified` もしくは `Expires` ヘッダーがセットされていないかぎり、この設定は `Expires` ヘッダーと `max-cache` キャッシュコントロール変数を自動的にセットするために使われます。

この値を`0`にセットすることでクライアントサイドキャッシュを無効にできます。

~`contextual`~
--------------

*デフォルト*: `false`

`contextual` 設定はキャッシュが現在のページのコンテキストに依存するかどうかを決めます。それゆえこの設定が効果があるのはパーシャルとコンポーネントによって使われるときだけです。

インクルードされるテンプレートによってパーシャルの出力が異なるとき、パーシャルはコンテキストのなかにある (contextual) と見なされるので、`contextual` 設定を `true` にセットしなければなりません。デフォルトでは、この設定は `false` にセットされており、このことはパーシャルとコンポーネントがどこでインクルードされても出力がつねに同じであることを意味します。

>**NOTE**
>パラメータのセットが異なればキャッシュが異なるのは明らかです。
