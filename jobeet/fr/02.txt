Jour 2: Le Projet
==================

Précédemment dans Jobeet
-------------------------

Nous n'avons pas encore écrit une seule ligne de code, mais
[hier](http://www.symfony-project.org/jobeet/1_2/fr/01), nous avons installé
l'environnement, créé un projet symfony, et nous nous sommes assurés de
commencer avec les bons paramètres de sécurité. Si vous avez suivi, vous
avez admiré votre écran qui vous affichait la magnifique page par
défaut d'une nouvelle application symfony.

![Congratulation page](http://www.symfony-project.org/images/jobeet/1_2/01/congratulations.png)

Mais vous en voulez plus. Vous voulez apprendre les bases et l'essentiel des
détails du développement d'une application symfony. Donc, reprenons notre voyage
pour atteindre le nirvana du développement symfony.


Aujourd'hui, nous allons prendre le temps de décrire les exigences du projet
Jobeet à l'aide de simples maquettes.

Le lancement du projet
-----------------------

Tout le monde parle de la crise en ce moment. Le chômage est de retour.

Je sais, les développeurs symfony ne sont pas trop concernés et c'est pourquoi
vous voulez apprendre symfony en premier lieu. C'est également difficile de
trouver de bons développeurs symfony.

Où pouvez-vous trouver un développeur symfony ? Où pouvez-vous montré vos
compétences en symfony ?

Vous devez trouvez un bon site pour **la recherche d'emploi**. Vous pensez à
Monster ? Réfléchissez encore. Vous avez besoin d'un site dédié. Un où vous
pourrez trouver les meilleures personnes, des experts. Un où il est simple,
rapide, et fun de rechercher un travail, ou d'en proposer.

Ne cherchez plus. Jobeet est le site. Jobeet est un logiciel open-source de
recherche d'emploi qui ne fait qu'une seule chose, mais bien. Il est facile
d'utilisation, à adapter, à faire évoluer, et à ajouter à votre site internet.
Il est multi langues dès le départ, et bien sûr il utilise les dernières
technologies du web 2.0 pour améliorer l'expérience utilisateur. Il fournit
également des feeds et une API pour interagir avec lui en programmant.

Est-ce qu'il existe déjà ? Comme utilisateur, vous trouverez beaucoup de site de
recherche d'emplois comme Jobeet sur internet. Mais trouvez-en un qui est Open
Source, et qui possède des fonctionnalités aussi évoluées que celles que nous
vous proposons.

Et qui peut dire que cela peut prendre moins de 24 heures à développer avec
symfony ?
Bien, nous ferions mieux de commencer maintenant !

Les histoires utilisateur du projet
------------------------------------

Avant de naviguer la tête la première dans le code, nous allons décrire le
projet un peu plus. Les sections suivantes décrivent par des histoires simples
les fonctionnalités que nous voulons implémenter pendant la première
version/itération du projet.

Le site Jobeet a 4 types d'utilisateurs :
 * **administrateur** : Il possède le site et il a le pouvoir magique
 * **utilisateur** : il visite le site pour rechercher un emploi ou en proposer
 un
 * **annonceur** : il soumet un offre d'emploi
 * **affilié** : il publie les offres sur son site.

Le projet a deux applications : le **frontend** ( histoires F1 à F7 ci-dessous )
où les utilisateurs interagissent avec le site, et le **backend** ( histoires B1
à B3 ) où les administrateurs gèrent le site.

L'application backend est sécurisée et nécessite des droits d'accès.

### Histoire F1 : Sur la page d'accueil les utilisateurs voient les dernières
offres.

Lorsqu'un utilisateur vient sur le site Jobeet, il voit une liste de postes
actif. Les postes sont triés par catégorie puis par date de publication ( les
nouveaux en premier ). Pour chaque poste seuls le lieux, la fonction et le nom
de l'entreprise sont affichés.

Pour chaque catégorie, la liste affiche les 10 premiers postes et un lien permet
de lister tous les postes de la catégorie choisie. ( Histoire F3 )

Sur la page d'accueil, les utilisateurs peuvent affiner la liste des postes (
Histoire F2 ) ou proposer un poste ( Histoire F5 ).

![Homepage Mockup](http://www.symfony-project.org/images/jobeet/1_2/02/mockup_homepage.png)

### Histoire F2 : Un utilisateur peuvent voir tous les postes d'une catégorie
choisie

Sur la page d'accueil lorsque un utilisateur clique sur le nom d'une catégorie
ou sur le lien "plus de postes", il voit tous les postes de cette catégorie
triés par date.

La liste est paginée avec 20 postes par page.

![The Category Page](http://www.symfony-project.org/images/jobeet/1_2/02/mockup_category.png)

### Histoire F3: Un utilisateur affine la liste avec des mots clés.

L'utilisateur peut saisir des mots clés pour affiner sa recherche. Les mots clés
peuvent être des mots correspondants au champ lieu, fonction, catégorie ou
nom de l'entreprise.

### Histoire F4 : Un utilisateur clique sur poste pour avoir plus d'information.

L'utilisateur peut sélectionner un poste à partir de la liste pour avoir des
informations plus détaillées.

![The Job Page](http://www.symfony-project.org/images/jobeet/1_2/02/mockup_job.png)

### Histoire F5: Un utilisateur propose un poste.

Un utilisateur peut proposer un poste. Un poste est décrit par plusieurs
informations :

  * L'entreprise
  * Type ( temps plein, temps partiel, ou indépendant)
  * Logo ( optionnel )
  * URL ( optionnel )
  * Fonction
  * Lieu
  * Catégorie ( Liste de catégories possibles )
  * Description du poste ( URL et les emails sont automatiquement liées )
  * Comment postuler ( URL et les emails sont automatiquement liées )
  * Public ( si le poste peut être publié sur les sites affiliés )
  * Email ( email de l'annonceur )

Il n'y a pas besoin de créer un compte pour soumettre un poste.

La procédure est simple avec seulement 2 étapes : Premièrement, l'utilisateur
remplit le formulaire avec toutes les informations nécessaires pour décrire le
poste, puis il valide les informations en prévisualisant la page du poste.

Même si l'utilisateur ne possède pas de compte, il peut modifier après coup les
informations sur le poste grâce à une URL spécifique ( protégée par un jeton
transmis à l'utilisateur lorsque le poste est créée ).

Chaque poste reste en ligne pendant 30 jours ( c'est modifiable par un
administrateur - voir histoire B2 ). Un utilisateur peut activer à nouveau ou
augmenter la validité de l'offre d'emploi pour une période de 30 jours
supplémentaires mais seulement lorsque le poste expire dans moins de 5 jours.

![The Job Creation Page](http://www.symfony-project.org/images/jobeet/1_2/02/mockup_post.png)

### Histoire F6 : Un utilisateur demande à être un affilié

Un utilisateur doit faire une demande pour devenir affilié et être autorisé à
utiliser l'API de Jobeet. Pour faire une demande, il doit fournir ces
informations :

  * Nom
  * Email
  * Url de son site

Un compte affilié doit être activé par un administrateur ( Histoire B3 ). Une
fois activé, l'affilié reçoit par email un jeton à utiliser avec l'API.

Lorsqu'il est inscrit, un affilié peut choisir de ne recevoir que des postes
appartenant à des catégories.

### Histoire F7: Un affilié récupère la liste des postes actifs.

Un affilié peut récupérer la liste des postes actifs en appelant l'API avec son
jeton. La liste peut être envoyée au format XML, JSON ou YAML.

La liste contient les informations publiques d'un poste.

L'affilié peut également limiter le nombre de postes renvoyés, et affiner sa
requête en spécifiant une catégorie.

### Histoire B1: Un administrateur configure le site.

Un administrateur peut éditer les catégories proposées sur le site.

Il peut également modifier quelques paramètres :

  * Le nombre maximum de postes affichés sur la page d'accueil
  * La langue du site
  * Le nombre de jour qu'un poste reste en ligne

### Histoire B2: Un administrateur gère les postes

Un administrateur peut éditer ou effacer un poste.

### Histoire B3: Un administrateur gère les affiliés

Un administrateur peut créer ou éditer des affiliés. Il a la responsabilité
d'activer un affilié et peut également en désactiver un.

Lorsqu'un administrateur active un nouvel affilié, le système crée un jeton
unique à utiliser par l'affilié.

A demain
---------

Comme pour tout développement web, vous ne commencez pas à coder dès le premier
jour. Vous devez rassembler les exigences en premier et travailler sur la
conception de maquettes. C'est ce que nous avons fait aujourd'hui.

Comme hier, le code d'aujourd'hui est rendu public sur le dépôt SVN de Jobeet.
Checkout `release_day_02` tag:

    $ svn co http://svn.jobeet.org/tags/release_day_02/ jobeet/
