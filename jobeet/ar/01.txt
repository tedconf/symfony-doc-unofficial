اليوم 1: بدء تشغيل المشروع
=========================
مقدمة
-----
منذ 3 سنوات و الإطار symfony مشروع مفتوح المصدر. و يعتبر حاليا واحدا من أشهر إطارات  PHP  بفضل مميزاته و مراجعه التعليمية الجيدة.
في دجنبر2005, و بعد أول إصدار رسمي لsymfony , نشرنا درس "Askeet tutorial" 
مجموعة مكونة من 24 درسا ستنشر يوميا ما بين فاتح دجنبر و أعياد الميلاد.
وقد أثبت هذا الدرس أنه وسيلة ممتازة لتقديم هذا الإطار للمبرمجين الجدد, الكثير من المبرمجين تعلموا لsymfony بفضل Askeet, والعديد من الشركات تستعمله اليوم  كوسيلة رئيسية للتدرب.
نحتفل حاليا بالإصدار 1.2 لsymfony, و قد حان الوقت  لدرس جديد بعد ظهور علامات التقادم على Askeet.
اكتشفوا Jobeet.  الذي ينشر يوما بعد يوم في موقع symfony .

التحدي
------
فصل كل يوم, ولمدة ساعة. هي مناسبة لتعلم برمجة موقع من البداية للنهاية. نعتقد أن 24 ساعة هي الوقت اللازم لمبرمج لتعلم قواعد symfony. سنضيف كل يوم للموقع وظائف جديدة. وسنستغل الفرصة للتعريف بالوظائف و المهام الجديدة symfony بالإضافة إلى أفضل تطبيقات تطوير المواقع.

بالنسبة Askeet كان في اليوم  21  "get-a-symfony-guru-for-a-day"
 لم نجد فكرة مناسبة وكان على المجتمع أن يقترح وظيفة نضيفها لAskeetو قد عرف  نجاحا كبيرا و هكذا قررنا إضافة محرك بحث و نجحنا في تطبيقه. و قد أظهر اليوم 21 أنه من بين أشهر أيام الدرس 


بالنسبة لJobeet, سنحتفل بأول يوم لشتاء  يوم 21 دجنبر بيوم التصميم. بعد اليوم الرابع سوف نحصل على كل شفرات HTML, CSS اللازمة لبدء  التصميم البياني لموقع Jobeet.  
إذن إذا كنتم تعملون مع مصمم أو تعملون بشركة بها قسم للتصميمات فسوف يكون بإمكانكم اقتراح بعض التصاميم البيانية.
في اليوم21 سنقترح سبرا للآراء. و ستختار المجموعة التصميم البياني لتقديمه مع Jobeet.

هذا الدرس مختلف
--------------
 تذكروا الأيام الأولى ل php4 .  
الأيام الأولى [Belle Epoque](http://fr.wikipedia.org/wiki/belle_Epoque)! 
 من أوائل اللغات المتخصصة في برمجة المواقع 
  ومن أبسطها للتعلم. و بما أن تكنولوجيا في هذا الميدان تتطور بسرعة كبيرة, على المبرمجين أن يكونوا على إطلاع بالجديد في ما يخص أفضل التطبيقات وجديد الأدوات. 
أفضل وسيلة للتعلم هي قراءة الدروس و الكتب.
لقد  قرأنا الكثير عن`Perl` أو `Ruby` أو `Java` أو `python` أو `php`  
و العديد منه يصبح محدودا حين يبدأ الكاتب في سرد مقاطع من الشفرات كأمثلة

 من الممكن أنك صادفت تنبيهات مثل :

  " في تطبيق حقيقي لا تنس أن تضيف المصادقة والتحكم في الأخطاء." 

أو

  " لم نتطرق للأمن لأننا في تمرين "

أو

  " يجب عليك تحضير الاختبارات "

كيف؟ هذه الأشياء مهمة بل من أهم المراحل كيف ما كان نوع الشفرة. وبما أن القارئ يترك لوحده دون الأخذ بعين الاعتبار المواضيع و الأمثلة التي قل ما تفيده , لذا لا تعتبر أحسن وسيلة لبداية التعلم.
لماذا ليست بوسيلة جيدة؟ لأن هذه المواضيع التي تترك للقارئ هي أولى أن تؤخذ بعين الاعتبار لبرمجة جيدة.
في هذا الدرس لن تجدوا مثل تلك العبارات التنبيهية , بل سنكتب اختبارات و سنتحكم في الأخطاء, وكونوا متأكدين بأننا سنطور تطبيقا مؤمنا. لهذا symfony يتعامل مع الشفرة ولكن أيضا الطريقة الصحيحة لتطبيقها وكيفية برمجة تطبيقات محترفة للشركات. وسنحظى بالعديد من المزايا لأن symfony يمنح العديد من الأدوات لبرمجة سهلة دون كتابة كثيرة لشفرة.
يعطي symfony أهمية من الدرجة الأولى للمصادقة و التحكم في الأخطاء و الأمن والاختبارات كما أننا لن نأخذ وقتا كبيرا لشرحها وهذه من الدوافع التي تجعلنا نلجأ لاستعمال الإطار في المشاريع الحقيقية. ونحن نشجعك على نسخ و لصق لبعض الأجزاء من الشفرة أو استعمال الرمز كله.

المشروع
------

 التطبيق الذي نحن بصدده كان من الممكن أن يكون كسابقه ولكن أردنا استعمال symfony في مشروع مفيد ولنثبت بأنه يمكن استعماله في تطوير تطبيقات احترافية بأقل مجهود و ذات أسلوب . سنحتفظ بسرية محتوى المشروع إلى يوم آخر بما أن لدينا ما نفعله اليوم لكن على أية حال أنتم تعرفون اسم التطبيق Jobeet .

في جدول اليوم؟
-------------
بما أن 24 ساعة تمثل وقتا كافيا لتطوير تطبيق باستعمال symfony فلن نكتب رمزPHP اليوم. ولكن حتى بدون كتابة أي سطر ستبدؤون بالتعرف على مزايا استعمال إطار كsymfony بإنشاء مشروع جديد فقط. الهدف اليوم هو تثبيت محيط التطوير و إظهار صفحة من المشروع في المتصفح وهذا يتطلب تثبيت symfony و إنشاء تطبيق و التحكم في المزود.

المكتسب
------

  قبل كل شيء تأكدوا من وجود مزود في محيط التطوير مثلا  Apache
  ومحرك لقاعدة البيانات   Mysql, PostgreSQl, SQLite
  و version 5.2.4 PHP
  او اكثر 

 وبما أننا سنستعمل سطر التحكم كثيرا, من الأفضل استعمال Unix-like OS.
 إذا كنتم تستعملون نظام Windows,
 فما عليكم سوى استعمال بعض الأوامر  في نافذة الأوامر `cmd`.

>**TIP**
> أوامر shell Unix
> سهلة التطبيق في محيط Windows .
> إذا كنت تريد استعمال  أدوات مثل `grep`,`gzip`,`tar`
> في Windows,
> يمكنك استعمال [Cygwin](http://cygwin.com/).

> الوثائق الرسمية صغيرة الحجم قليلا, و لكن ستجد دليل تثبيت جيد
> [هنا](http://www.soe.ucsc.edu/~you/notes/cygwin-install.html) 
> وعلى الذين يحبون المغامرة تجريب
>[Windows Services for Unix](http://technet.microsoft.com/en-gb/interopmigration/bb380242.aspx)
> ل Microsoft.

 بما أن هذا الدرس سيركز بالخصوص على symfony,
  فنحن نعتبر أنكم على دراية واسعة ب PHP5
  و  البرمجة الموجهة .

تثبيت symfony
---------------
أولا أنشأ مجلدا لتسجيل ملفات المشروع Jobeet 

    $ mkdir -p /home/sfprojects/jobeet
    $ cd /home/sfprojects/jobeet

في Windows :

    c:\> mkdir c:\development\sfprojects\jobeet
    c:\> cd c:\development\sfprojects\jobeet

>**Note**
>ننصح مستعملي Windows
> بتشغيل symfony
> و تثبيت المشاريع الجديدة في مسار لا يحتوي على فراغات  .
>إجتنب استعمال المجلد
>`My Documents`و`Documents and Settings`

أنشئ مجلدا لتسجيل ملفات مكتبة الإطار symfony:

    $ mkdir -p lib/vendor

 بما أن هذا الدرس من أجل الإصدار  symfony 1.2,
 إذهب الى صفحة التثبيت  
[symfony 1.2](http://www.symfony-project.org/installation/1_2).


 تحت الحزمة  "Source Download" 
 ستجد الأرشيف على شكل `.tgz`,`.zip`.
 حمله وضعه في المجلد: `lib/vendor`.
 ثم فك ضغطه:  

    $ cd lib/vendor
    $ tar zxpf symfony-1.2-latest.tgz
    $ mn symfony-1.2.0 symfony

 في Windows
 يمكن فك ضغط الأرشيف باستعمال المتصفح .
 بعد إعادة تسمية المجلد ب `symfony`,
 تحصل على المجلد المسمى  `c:\development\sfprojects\jobeet\lib\vendor\symfony` .

 بما أن التحكم  php
 يتغير من توزيع لآخر فعلينا التأكد من استعمال التحكم المناسب لمتطلبات symfony 
 نفذ السكريبت للتأكد من التحكم الممنوح من  symfony 

    $ cd ../..
    $ php lib/vendor/symfony/data/bin/check_configuration.php

 في حالة وقوع خطأ ستحصلون على نصائح لحل المشكل .
 بما أن التحكم  php
 يمكن أن يكون مختلفا , لهذا يمكن أيضا تنفيذ السكريبت انطلاقا من المتصفح 

   
أنقل السكريبت في مكان ما في
الموزع ويب وجرب إستدعاء الملف
.و لا تنس نزع الملف بعد الإنتهاء من التجريب

    $ rm web/check_configuration.php

![Configuration check](http://www.symfony-project.org/images/jobeet/1_2/01/configuration_check.png)

 إذا لم يظهر السكريبت أخطاء فتأكد من أن symfony 
 مثبت بطريقة صحيحة بإستعمال سطر أوامر  symfony 
 لإظهار إصداره

    $ php lib/vendor/symfony/data/bin/symfony -V

 في  Windows: 

    c:\> cd ..\..
    c:\> php lib\vendor\symfony\data\bin\symfony -V

إذا كنت تحب الإستطلاع وتريد أن ترى ما الذي يمكن فعله بسطرالأوامر أكتب  من أجل سرد المهام و الأوامر المتاحة

    $ php lib/vendor/symfony/data/bin/symfony

 في  Windows:

    c:\> php lib\vendor\symfony\data\bin\symfony

 سطر أوامر  symfony
 أفضل رفيق للمبرمج  يمنحه مجموعة من الوظائف التي ترفع نسبة انتاجه في جميع أعماله اليومية مثل مسح المخزن  وتوليد الرمز وأشياء أخرى كثيرة  .

تثبيت المشروع
------------

 في symfony
 التطبيقات  تتشارك المعطيات في نفس النموذج  والكل مجموع في مشروع  .
 المشروع jobeet
 سيحتوي على تطبيقين مختلفين :
 backend , frontend .

إنشاء المشروع
------------

 إنطلاقا من مجلد  jobeet
 نفذ أمر إنشاء المشروع : `generate:project`.

    $ php lib/vendor/symfony/data/bin/symfony generate:project jobeet

 في  Windows:

    c:\> php lib\vendor\symfony\data\bin\symfony generate:project jobeet

 الأمر `generate:project`
 يولد الشكل الإفتراضي للمجلدات وينشئ الملفات اللازمة لمشروع  symfony.

| دليل |       الوصف     
| ----------- | ----------------------------------------- 
| `/apps`     | يستضيف جميع تطبيقات المشروع
| `/cache`    | الملفات المخبأة في الإطار   
| `/config`   | ملف تحكم المشروع          
| `/lib`      |    مكتبات المشروع و الأصناف
| `/log`      |           ملفات سجل الإطار
| `/plugins`  |               تثبيث الملحق
| `/test`     | ملف إختبار الوحدة و ملف إختبار الوظيفة
| `/web`      |  الدليل الجذري للويب  (انظر أدناه) 

>**NOTE**
> لماذا  يولد  symfony
> العديد من الملفات؟ 
> من فوائد استعمال إطار متدرج هي توحيد البرمجة .
> بفضل الشكل الإفتراضي للملفات والمجلدات فإن أي مبرمج يعرف symfony
> يمكنه إعادة برمجة أي مشروع symfony.
> بعد دقائق معدودة سيكون بامكانك الإبحار في الرمز و تثبيت  المعوقات وإضافة وظائف جديدة .
> الأمر `generate:project`
> أنشأ أيضا `symfony`
> كاختصار في جذر مشروع jobeet
>  لتسهيل كتابة الأوامر وقت تنفيذ مهمة.
> من الآن فصاعدا سنستعمل الإختصار `symfony`
> مكان المسار الكامل لتنفيذ أمر symfony .

إنشاء التطبيق
-------------

 أنشأ التطبيق `frontend`
 بتنفيذ الأمر `generate:app` :

    $ php symfony generate:app --escaping-strategy=on --csrf-secret=UniqueSecret frontend

>**TIP**
> بما أن الملف symfony
> تثبيتي لهذا يمكن لمستعملي  Unix
> تغيير  `php symfony`
> من الآن ب  `symfony/.`
> بالنسبة ل `Windows`
> يمكنك نسخ الملف `symfony.bat`
> في مشروعك واستعمال `symfony`
> مكان  `php symfony`:

>     c:\> copy lib\vendor\symfony\data\bin\symfony.bat


 مرة أخرى الأمر  `generate:app`
 أنشأ الشكل الإفتراضي لمجلدات التطبيق في المجلد `apps/frontend`.

| دليل |       الوصف     
| ----------- | ------------------------
| `/config`   |         ملف تحكم التطبيق 
| `/lib`      | مكتبات التطبيق و الأصناف
| `/modules`  |   الترميز البرمجي  للتطبيق
| `/templates`|   الملفات الإجمالية للقالب 

>**TIP** 
> يجب تنفيذ جميع أوامر `symfony`
> إنطلاقا من أصل المشروع إلا إذا طلب منك تغييره  .

 عندما استعملنا الأمر `generate:app`
 أضفنا خاصيتين للأمن:
 
* `escaping-strategy--`:  تفعيل  المنافذ  للتحذير  من  الهجمات XSS .
* `csrf-secret--`:
تفعيل  session tokens
 في الاستمارات  للتحذير  من الهجمات CSRF.

 بإضافة هاتين الخاصيية إلى الأمر فقد حمينا برمجتنا من إثنين من أشهر الهجمات الموجودة في الويب وهذا جيد لأن symfony
 سيأخذ الإحتياطات اللازمة من أجلنا

>**TIP** 
>خذ بعض الوقت للتعرف على ثغرات الحماية إذا لم تكن تعرفها  :
>[CSRF](http://en.wikipedia.org/wiki/CSRF) [XSS](http://en.wikipedia.org/wiki/Cross-site_scripting).

 مسار  symfony
--------------

 يمكنك معرفة إصدار symfony الذي تستعمله في مشروعك بإستعمال :

    $ php symfony -V

 الخاصية `V`
 تظهر أيضا المسار الذي تم فيه تثبيت symfony
الموجود أيضا في الملف `config/ProjectConfiguration.class.php`:

    [php]
    // config/ProjectConfiguration.class.php
    require_once `/Users/fabien/work/symfony/dev/1.2/lib/autoload/sfCoreAutoload.class.php`;

 من أجل تحميل أفضل للمشروع غير المسار الشامل لثتبيت  symfony
 بالمسار النسبي  .

    [php]
    // config/ProjectConfiguration.class.php
    require_once dirname(__FILE__).`/../lib/vendor/symfony/lib/autoload/sfCoreAutoload.class.php`;

  بهذا الشكل يمكنك تغيير موضع مشروعك في أي مكان في جهازك أو جهاز آخر مشروعك سيشتغل دائما .

 إذا ألقيت  نظرة على مجلد `/web`
 ستجد ملفين PHP :

 `index.php`, `frontend_dev.php`.
 و يسمون ب :  **front controllers**.
 كل الاستعلامات للتطبيق  تتم عبرهم 
 و لكن لماذا لدينا 2 front controllers
 بينما نمتلك تطبيقا وحيدا؟‎

 الملفان يشيران إلى نفس التطبيق  ولكن في مجالين مختلفين  .
 حين تطور تطبيقا تحتاج إلى العديد من المجالات ما عدا إذا كنت تبرمج مباشرة في الموزع  .

 * **l'environement de developpement**: هو المحيط المستعمل من طرف المبرمجين لإضافة مهام جديدة , حصر المعوقات...  
 * **l'environement de tests**: هو المحيط المستعمل لاختبار أتوماتيكي للتطبيق  .
 * **l'environement de recette**: يستعمله الزبون لتجربة التطبيق و تحديد الأخطاء و المهام  ناقصة  .
 * **l'environement de production**: المحيط الذي يستعمله  المستخدم النهائي  .

 ما الذي يجعل منه وحيدا؟ 
في محيط البرمجة يستوجب على التطبيق تسجيل عناصر الإستعلام لتسهيل عملية التصحيح و عليه أيضا أن يظهر  الإستثناءات في المتصفح و لكن علينا عدم تفعيل نظام التخزين لتأخذ التغييرات في 
الرمز بعين الاعتبار :
لهذا يجب على محيط البرمجة أن يكون مختصرا للمبرمج  .

![An exception in the dev environment](http://www.symfony-project.org/images/jobeet/1_2/01/exception_dev.png)

 على العكس في محيط الإنتاج على التطبيق أن يظهر رسالات الأخطاء  الموافقة للإستثناءات  PHP .
 ويبقى المخزن مفعلا. إذا يجب على محيط الإنتاج أن يكون مناسبا لخبرة المستعمل  .

![An exception in the prod environment](http://www.symfony-project.org/images/jobeet/1_2/01/exception_prod.png)

 المحيط في  symfony
 يلعب دورا وحيدا في متغيرات التحكم وهو مثبت بالمجالات الثلاث :
 `dev`,`test`,`prod` .
 إذا فتحت ملفات front controllers
سترى أن الاختلاف الوحيد هو متغيرات المجال . 

    [php]
    // web/index.php
    <?php
    require_once(dirname(__FILE__).`/../config/ProjectConfiguration.class.php`);

    $configuration = ProjectConfiguration::getApplicationConfiguration(`frontend`, `prod`, false);
    sfContext::createInstance($configuration)->dispatch();

>**TIP**
> تعريف مجال جديد في symfony
> سهل كخلق front controllers 
>جديد و سنرى لاحقا كيفيات تغيير المتغيرات لمجال ما . 

تهيئة مستخدم الويب: أسوأ طريقة
------------------------------

 أنشأنا مجلدا في ما مضى ليودع فيه المشروع  Jobeet .
 إذا أنشأته في مكان ما في أصل الويب في موزعك يمكنك إستعمال المتصفح للوصول إليه .

 **لا تستعمل هدا التثبيت في موزع الإنتاج**
 اتبع ما يلي لتهييئ صحيح لموزعك .

تهيئة موزع الويب : الطريقة الآمنة
--------------------------------

 من العادات الجيدة في الويب أن نضع في أصل الويب الملفات المستعملة من طرف المتصفح مثل CSS, javascript أو الصور .
و ننصحك بتخزين هذه الملفات في ملف الويب في مشروعك .

 إذا رأيت هذا الملف فستجد ملفات بالعناصر المذكورة أعلاه و ملفي Front controllers  .
 وهذان هما ملفا PHP
 الوحيدان في أصل الويب .
 و ملفات PHP
 الأخرى يجب أن تكون غير متاحة باستعمال المتصفح  وهي فكرة جيدة تصب في منحى الحماية  .

### التحكم في مستخدم الويب 

 حان وقت تغيير تهيأة  Apache
 لجعل المشروع متاحا للجميع. أضف هذه السطور في نهاية الملف  `httpd.conf`

    #تاكد من عدم تكرار هذا السطر
    NameVirtualHost 127.0.0.1:8080

    #Jobeet هذا تحكم 

    Listen 127.0.0.1:8080

    <VirtualHost 127.0.0.1:8080>
      DocumentRoot "/home/sfprojects/jobeet/web"
      DirectoryIndex index.php
      <Directory "/home/sfprojects/jobeet/web">
        AllowOverride All
        Allow from All
      </Directory>

      Alias /sf /home/sfprojects/jobeet/lib/vendor/symfony/data/web/sf
      <Directory "/home/sfprojects/jobeet/lib/vendor/symfony/data/web/sf">
        AllowOverride All
        Allow from All
      </Directory>
    </VirtualHost>


>**TIP**
> النعت `sf/`
> يعطي الممر للصور  و ملفات   Javascript
> اللازمة للإظهار الجيد لصفحات  symfony
> و لوحة أدوات web debug )web debug toolbar).
>
> بالنسبة لنظام  Windows
> يجب تغيير السطر `Alias`
> مثلا ب :

>     Alias /sf "c:\development\sfprojects\jobeet\lib\vendor\symfony\data\web\sf"

>  و  `/home/sfprojects/jobeet/web`
> ب :

>     `c:\development\sfprojects\jobeet\web`

 هذا التحكم يجعل Apache
 يستمع من المنفذ   `8080` 
 لجهازك , و يمكن إستعماله بواسطة العنوان : 

 /http://localhost:8080

 تستطيع تغيير رقم المنفذ  8080
بآخر و لكن يجب إستعمال رقم أكبر من
1024
 لأنه لا يتطلب حقوق الإدارة.

>**SIDEBAR**
> تهيئة مجال خاص ب  Jobeet    
>
> إذا كنت مدير جهازك فأفضل طريقة هي إستعمال virtual host
> في مكان منفذ جديد لكل مشروع جديد .
> أحسن من إستعمال منفذ وإضافة الأمر التوجيهي `listen`.
> إختر إسم مجال و أضف الأمر التوجيهي `serverName`:
>
>     # This is the configuration for Jobeet
>     <VirtualHost 127.0.0.1:80>
>       ServerName jobeet.localhost
>       <!-- same configuration as before -->
>     </VirtualHost>
>
> إسم المجال `jobeet.localhost`
> يجب عليه أن يصرح به محليا. إذا كنت تستعمل نظام Linux
> فعليك فعل نفس الشىء في الملف `etc/hosts/` .
> إذا كنت تستعمل Windows XP
> و يوجد هذا الملف في `\C:\WINDOWS\system32\drivers\etc`
>
>أضف هذا السطر
>
>     127.0.0.1         jobeet.localhost

###جرب التحكم الجديد

 أعد تشغيل Apache,
 وجرب إذا كنت تستطيع الدخول إلى التطبيق الجديد إنطلاقا من المتصفح بكتابة  `/http://jobeet.localhost/index.php`  
 و هذا حسب التحكم الذي إستعملت في السابق ل Apache

   ![Congratulations](http://www.symfony-project.org/images/jobeet/1_2/01/congratulations.png)

>**Note**:
> إذا ثبت وحدة Apache: `mod_rewrite`
> فلاداعي لاستعمال `/index.php`
> في المسارات .

 يمكنك إستعمال مجال التطوير عبر المسار  :

 /http://jobeet.localhost/frontend_dev.php

 لوحة أدوات الويب لتصحيح الأخطاء  (the web debug toolbar)
 يجب أن تتواجد في الركن الأعلى الأيمن من المتصفح بها أيقونات , وهي تدل على أن نعت التحكم `sf/` صحيح .

   ![web debug toolbar](http://www.symfony-project.org/images/jobeet/1_2/01/web_debug_toolbar.png)

>**Note**
> التثبيت مختلف قليلا إذا أردت تنفيد symfony
> إنطلاقا من موزع IIS
> في مجال Windows
> ستجد في هذا الدرس كيفية التحكم فيه
>[related tutorial](http://www.symfony-project.com/cookbook/1_0/web_server_iis). 

Subversion
----------

 إستعمال نظام تسيير إصدار الرمز من التطبيقات الجيدة في برمجة تطبيق ويب, و إستعماله  يسمح لك ب: 

 * العمل بثقة  .
 * الرجوع إلى إصدار سابق إذا دمر تغيير شي ما  .
 * الترخيص لأكثر من شخص على نفس المشروع  . 
 * الوصول للإصدارات المتتابعة للتطبيق  .

 في هذا المقطع سنشرح كيفية إستعمال 
[Subversion](http://subversion.tigris.org/)
 ب symfony.
 إذا إستعملت أداة أخرى غير Subversion
 سيكون من السهل ملاءمتها مع ما سنشرح .

 لنفترض أن لك حق إستعمال SVN و أنك تستطيع الدخول إليه عبر HTTP .
 
>**TIP**
>إذا لم تتوفر على موزع Subversion
>تستطيع إنشاء واحد مجانا على 
>[Google Code](http://code.google.com/hosting/)
> أو أكتب فقط "free subversion repository" في `google` من أجل الحصول على خيارات متعددة  

 أولا أنشئ مستودعا جديدا لمشروع `jobeet`:

    $ svnadmin create /path/to/jobeet/repository

 على جهازك ، انشىء  البنية الأساسية  للملف  :

    $ svn mkdir -m "created default directory structure"
    ➥ http://svn.example.com/jobeet/trunk
    ➥ http://svn.example.com/jobeet/tags
    ➥ http://svn.example.com/jobeet/branches

 و خذ الملف الفارغ  `/trunk` :

    $ cd /home/sfprojects/jobeet
    $ svn co http://svn.example.com/jobeet/trunk/ .

 ثم إحذف من المجلدات `/cache`
 و  `/log`
 لأننا لا نريد أن ندخلهم  في المستودع 

    $ rm -rf cache/* log/*

 الآن طبق الحقوق الجيدة للكتابة في المجلدات cache, log على المستويات المناسبة 
 ليتمكن الموزع من الكتابة فيهم : 

    $ chmod 777 cache/ log/

 الآن استدع جميع الملفات و المجلدات

    $ svn add *

 و بما أننا لا نريد أبدا إيداع محتويات المجلدات `cache`
 و `log`
 نحدد القائمة `ignore` :

    $ svn propedit svn:ignore cache

 يجب تشغيل محرر النص الافتراضي ل SVN,
 يجب على Subversion
 تجاهل محتويات هذا المجلد :

    *

سجل و أخرج .

 قم بنفس الشي للمجلد  `/log`:

    $ svn propedit svn:ignore log

ثم أكتب :

    *

 و أخيرا أودع آخر التغييرات في المستودع :

    $ svn import -m "made the initial import" .
      ➥ http://svn.example.com/jobeet/trunk

>**Tip**
> يمكن لمستعملي نظام Windows
> إستعمال خادم
> [TortoiseSVN](http://tortoisesvn.tigris.org/)
> للتحكم في مستودع Subversion .

نراكم غدا إن شاء الله
------------------

 إنتهى اليوم الأول رغم أننا لم نتكلم بعد عن symfony ,
 ثبتنا محيط تطوير متين و تكلمنا على التطبيقات الجيدة للبرمجة الويب ونحن جاهزون للبرمجة  .

 غدا سنكتشف مهمة التطبيق و سنخوض في symfony.
 و لا تنس أن تسجل في 
 [symfony blog feed](http://www.symfony-project.org/blog/)
 إذا كنت تريد أن تكون على إطلاع بآخر أخبار Jobeet .

تأكدوا من العودة غدا  .

