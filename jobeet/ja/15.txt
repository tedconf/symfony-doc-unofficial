15日目: フィード
================

昨日、あなた独自のsymfonyアプリケーションの開発を始めました。
止めないでください。symfonyをさらに学ぶので、
アプリケーションに新しい機能を追加し、どこかでそれをホストし、
コミュニティと共有しようと努めてください。

今日は完全に異なる題材に移ります。

求人情報を探している場合、新しいが投稿されるとすぐに知らせが来ることが望ましいでしょう。
毎時間ごとにWebサイトを確認するのはあまり便利ではないので、
Jobeetのユーザーに最新情報を提供するために求人情報のフィードを追加します。

フォーマット
------------

symfonyフレームワークはフォーマットとmime-typeをネイティブにサポートします。
これは同じモデルとコントローラがリクエストされたフォーマットに基づいて
異なるテンプレートを持つことを意味します。
デフォルトのフォーマットはHTMLですが、`txt`、`js`、`css`、`json`、`xml`、`rdf`、もしくは
`atom`のように、symfonyはいくつかのフォーマットをそのまま使えます。

フォーマットはリクエストオブジェクトの`setRequestFormat()`メソッドを使用して
設定できます:

    [php]
    $request->setRequestFormat('xml');

しかし大抵の場合、フォーマットはURLに埋め込まれます。このケースの場合、
特別な変数`sf_format`が対応するルートで使われる場合、
symfonyは自動的に設定します。求人リストに関して、リストのURLは次の通りです:

    http://jobeet.localhost/frontend_dev.php/job

このURLは次の内容と同等です:

    http://jobeet.localhost/frontend_dev.php/job.html

両方のURLは同等です。`sfPropelRouteCollection`クラスによって生成されたルートは
`sf_format`を拡張子として持ち`html`はデフォルトのフォーマットだからです。
`app:routes`タスクを実行することであなた自身で確認できます:

![Cli](http://www.symfony-project.org/images/jobeet/1_2/15/cli.png)

フィード
--------

### 最新のjobフィード

異なるテンプレートを作成することで異なるフォーマットを簡単にサポートできます。
最新の求人情報用に[Atomフィード](http://en.wikipedia.org/wiki/Atom_(standard))を作成するには、
`indexSuccess.atom.php`テンプレートを作ります:

    [php]
    <!-- apps/frontend/modules/job/templates/indexSuccess.atom.php -->
    <?xml version="1.0" encoding="utf-8"?>
    <feed xmlns="http://www.w3.org/2005/Atom">
      <title>Jobeet</title>
      <subtitle>Latest Jobs</subtitle>
      <link href="" rel="self"/>
      <link href=""/>
      <updated></updated>
      <author><name>Jobeet</name></author>
      <id>Unique Id</id>

      <entry>
        <title>Job title</title>
        <link href="" />
        <id>Unique id</id>
        <updated></updated>
        <summary>Job description</summary>
        <author><name>Company</name></author>
      </entry>
    </feed>

>**SIDEBAR**
>テンプレートの名前
>
>`html`はWebアプリケーションで最も使われる共通のフォーマットなので、
>テンプレートの名前で省略できます。`indexSuccess.php`と`indexSuccess.html.php`
>テンプレートは同等でsymfonyは最初の方を使います。
>
>なぜテンプレートのデフォルトの接尾辞は`Success`なのでしょうか？
>アクションはレンダリングするテンプレートを指し示す値を返すことができます。アクションが何も返さない場合、
>次のコードと同等です:
>
>     [php]
>     return sfView::SUCCESS; // == 'Success'
>
>接尾辞を変更したい場合、次のようなものを返すだけです:
>
>     [php]
>     return sfView::ERROR; // == 'Error'
>
>     return 'Foo';
>
>以前見たように、テンプレートの名前は
>`setTemplate()`メソッドを利用して変更することもできます:
>
>     [php]
>     $this->setTemplate('foo');

デフォルトでは、symfonyはフォーマットに従って`Content-Type`レスポンスを変更し
HTMLではないすべてのフォーマットに関して、レイアウトは無効です。
Atomフィードに関して、symfonyは`Content-Type`を
`application/atom+xml; charset=utf-8`に変更します。

Jobeetのフッターにおいて、フィードへのリンクを更新します:

    [php]
    <!-- apps/frontend/templates/layout.php -->
    <li class="feed">
      <a href="<?php echo url_for('@job?sf_format=atom') ?>">Full feed</a>
    </li>

内部URIは変数として追加された`sf_format`を伴う`job`リストに対して同じです。

ブラウザがフィードを自動的に検出できるように
レイアウトのheadセクションに`<link>`タグを追加します:

    [php]
    <!-- apps/frontend/templates/layout.php -->
    <link rel="alternate" type="application/atom+xml" title="Latest Jobs"
      href="<?php echo url_for('@job?sf_format=atom', true) ?>" />

`href`リンク属性に関して、`url_for()`ヘルパーの2番目の引数のおかげで
絶対URLが使われます。

Atomテンプレートヘッダーを次のコードで置き換えます:

    [php]
    <!-- apps/frontend/modules/job/templates/indexSuccess.atom.php -->
    <title>Jobeet</title>
    <subtitle>Latest Jobs</subtitle>
    <link href="<?php echo url_for('@job?sf_format=atom', true) ?>" rel="self"/>
    <link href="<?php echo url_for('@homepage', true) ?>"/>
<propel>
    <updated><?php echo gmstrftime('%Y-%m-%dT%H:%M:%SZ', JobeetJobPeer::getLatestPost()->getCreatedAt('U')) ?></updated>
</propel>
<doctrine>
    <updated><?php echo gmstrftime('%Y-%m-%dT%H:%M:%SZ', strtotime(Doctrine::getTable('JobeetJob')->getLatestPost()->getCreatedAt())) ?></updated>
</doctrine>
    <author>
      <name>Jobeet</name>
    </author>
    <id><?php echo sha1(url_for('@job?sf_format=atom', true)) ?></id>

<propel>
日付をタイムスタンプとして取得するために`getCreatedAt()`への引数として`U`を使う方法に注目してください。
最新投稿の日付を取得するには、
`getLatestPost()`メソッドを作ります:
</propel>
<doctrine>
`created_at`の日付をタイムスタンプとして取得するために`strtotime()`関数の使い方に注目してください。
最新投稿の日付を取得するには、
`getLatestPost()`メソッドを作ります:
</doctrine>

<propel>
    [php]
    // lib/model/JobeetJobPeer.php
    class JobeetJobPeer extends BaseJobeetJobPeer
    {
      static public function getLatestPost()
      {
        $criteria = new Criteria();
        self::addActiveJobsCriteria($criteria);

        return JobeetJobPeer::doSelectOne($criteria);
      }

      // ...
    }
</propel>
<doctrine>
    [php]
    // lib/model/doctrine/JobeetJobTable.class.php
    class JobeetJobTable extends Doctrine_Table
    {
      public function getLatestPost()
      {
        $q = Doctrine_Query::create()
          ->from('JobeetJob j');
        $this->addActiveJobsQuery($q);

        return $q->fetchOne();
      }

      // ...
    }
</doctrine>

フィードエントリは次のコードで生成できます:

    [php]
    <!-- apps/frontend/modules/job/templates/indexSuccess.atom.php -->
    <?php use_helper('Text') ?>
    <?php foreach ($categories as $category): ?>
      <?php foreach ($category->getActiveJobs(sfConfig::get('app_max_jobs_on_homepage')) as $job): ?>
        <entry>
          <title>
            <?php echo $job->getPosition() ?> (<?php echo $job->getLocation() ?>)
          </title>
          <link href="<?php echo url_for('job_show_user', $job, true) ?>" />
          <id><?php echo sha1($job->getId()) ?></id>
<propel>
          <updated><?php echo gmstrftime('%Y-%m-%dT%H:%M:%SZ', $job->getCreatedAt('U')) ?></updated>
</propel>
<doctrine>
          <updated><?php echo gmstrftime('%Y-%m-%dT%H:%M:%SZ', strtotime($job->getCreatedAt())) ?></updated>
</doctrine>
          <summary type="xhtml">
           <div xmlns="http://www.w3.org/1999/xhtml">
             <?php if ($job->getLogo()): ?>
               <div>
                 <a href="<?php echo $job->getUrl() ?>">
                   <img src="http://<?php echo $sf_request->getHost().'/uploads/jobs/'.$job->getLogo() ?>"
                     alt="<?php echo $job->getCompany() ?> logo" />
                 </a>
               </div>
             <?php endif; ?>

             <div>
               <?php echo simple_format_text($job->getDescription()) ?>
             </div>

             <h4>How to apply?</h4>

             <p><?php echo $job->getHowToApply() ?></p>
           </div>
          </summary>
          <author>
            <name><?php echo $job->getCompany() ?></name>
          </author>
        </entry>
      <?php endforeach; ?>
    <?php endforeach; ?>

リクエストオブジェクト(`$sf_request`)の`getHost()`メソッドは
現在のホストを返します。
企業のロゴへの絶対パスを作る際に重宝します。

![フィード](http://www.symfony-project.org/images/jobeet/1_2/15/feed.png)

>**TIP**
>フィードを作成する際に、[`curl`](http://curl.haxx.se/)もしくは
>[`wget`](http://www.gnu.org/software/wget/)のようなコマンドラインツールを利用すれば
>フィードの実際の内容を見れるので
>デバッグ作業が楽になります。

### カテゴリの最新求人フィード

Jobeetのゴールの1つはよりターゲットを絞った求人情報を見つけることの手助けになることです。
ですので、それぞれのカテゴリ用のフィードを提供する必要があります。

最初に、異なるフォーマット用のサポートを追加するために`category`ルートを更新しましょう:

    [yml]
    // apps/frontend/config/routing.yml
    category:
      url:     /category/:slug.:sf_format
      class:   sfPropelRoute
      param:   { module: category, action: show, sf_format: html }
      options: { model: JobeetCategory, type: object }
      requirements:
        sf_format: (?:html|atom)

これで、`category`ルートは`html`と`atom`フォーマットの両方を理解します。
テンプレートのカテゴリフィードへのリンクを更新します:

    [php]
    <!-- apps/frontend/modules/job/templates/indexSuccess.php -->
    <div class="feed">
      <a href="<?php echo url_for('category', array('sf_subject' => $category, 'sf_format' => 'atom')) ?>">Feed</a>
    </div>

    <!-- apps/frontend/modules/category/templates/showSuccess.php -->
    <div class="feed">
      <a href="<?php echo url_for('category', array('sf_subject' => $category, 'sf_format' => 'atom')) ?>">Feed</a>
    </div>

最後のステップは`showSuccess.atom.php`テンプレートを作ることです。
しかしこのフィードは求人の一覧も表示するので、`_list.atom.php`パーシャルを作ることでフィードエントリを
生成するコードをリファクタリングできます。
`html`フォーマットに関して、パーシャルはフォーマット専用です:

    [php]
    <!-- apps/frontend/job/templates/_list.atom.php -->
    <?php use_helper('Text') ?>

    <?php foreach ($jobs as $job): ?>
      <entry>
        <title><?php echo $job->getPosition() ?> (<?php echo $job->getLocation() ?>)</title>
        <link href="<?php echo url_for('job_show_user', $job, true) ?>" />
        <id><?php echo sha1($job->getId()) ?></id>
<propel>
          <updated><?php echo gmstrftime('%Y-%m-%dT%H:%M:%SZ', $job->getCreatedAt('U')) ?></updated>
</propel>
<doctrine>
          <updated><?php echo gmstrftime('%Y-%m-%dT%H:%M:%SZ', strtotime($job->getCreatedAt())) ?></updated>
</doctrine>
        <summary type="xhtml">
         <div xmlns="http://www.w3.org/1999/xhtml">
           <?php if ($job->getLogo()): ?>
             <div>
               <a href="<?php echo $job->getUrl() ?>">
                 <img src="http://<?php echo $sf_request->getHost().'/uploads/jobs/'.$job->getLogo() ?>"
                   alt="<?php echo $job->getCompany() ?> logo" />
               </a>
             </div>
           <?php endif; ?>

           <div>
             <?php echo simple_format_text($job->getDescription()) ?>
           </div>

           <h4>How to apply?</h4>

           <p><?php echo $job->getHowToApply() ?></p>
         </div>
        </summary>
        <author>
          <name><?php echo $job->getCompany() ?></name>
        </author>
      </entry>
    <?php endforeach; ?>

求人フィードのテンプレートを簡略化するために`_list.atom.php`パーシャルを使うことができます:

    [php]
    <!-- apps/frontend/modules/job/templates/indexSuccess.atom.php -->
    <?xml version="1.0" encoding="utf-8"?>
    <feed xmlns="http://www.w3.org/2005/Atom">
      <title>Jobeet</title>
      <subtitle>Latest Jobs</subtitle>
      <link href="<?php echo url_for('@job?sf_format=atom', true) ?>" rel="self"/>
      <link href="<?php echo url_for('@homepage', true) ?>"/>
<propel>
      <updated><?php echo gmstrftime('%Y-%m-%dT%H:%M:%SZ', JobeetJobPeer::getLatestPost()->getCreatedAt('U')) ?></updated>
</propel>
<doctrine>
      <updated><?php echo gmstrftime('%Y-%m-%dT%H:%M:%SZ', strtotime(Doctrine::getTable('JobeetJob')->getLatestPost()->getCreatedAt())) ?></updated>
</doctrine>
      <author>
        <name>Jobeet</name>
      </author>
      <id><?php echo sha1(url_for('@job?sf_format=atom', true)) ?></id>

    <?php foreach ($categories as $category): ?>
      <?php include_partial('job/list', array('jobs' => $category->getActiveJobs(sfConfig::get('app_max_jobs_on_homepage')))) ?>
    <?php endforeach; ?>
    </feed>

最後に、`showSuccess.atom.php`テンプレートを作ります:

    [php]
    <!-- apps/frontend/modules/category/templates/showSuccess.atom.php -->
    <?xml version="1.0" encoding="utf-8"?>
    <feed xmlns="http://www.w3.org/2005/Atom">
      <title>Jobeet (<?php echo $category ?>)</title>
      <subtitle>Latest Jobs</subtitle>
      <link href="<?php echo url_for('category', array('sf_subject' => $category, 'sf_format' => 'atom'), true) ?>" rel="self" />
      <link href="<?php echo url_for('category', array('sf_subject' => $category), true) ?>" />
<propel>
      <updated><?php echo gmstrftime('%Y-%m-%dT%H:%M:%SZ', $category->getLatestPost()->getCreatedAt('U')) ?></updated>
</propel>
<doctrine>
      <updated><?php echo gmstrftime('%Y-%m-%dT%H:%M:%SZ', strtotime($category->getLatestPost()->getCreatedAt())) ?></updated>
</doctrine>
      <author>
        <name>Jobeet</name>
      </author>
      <id><?php echo sha1(url_for('category', array('sf_subject' => $category), true)) ?></id>

      <?php include_partial('job/list', array('jobs' => $pager->getResults())) ?>
    </feed>

メインの求人情報フィードに関して、カテゴリ用の最新の求人情報の日付が必要です:

    [php]
<propel>
    // lib/model/JobeetCategory.php
</propel>
<doctrine>
    // lib/model/doctrine/JobeetCategory.class.php
</doctrine>
    class JobeetCategory extends BaseJobeetCategory
    {
      public function getLatestPost()
      {
        $jobs = $this->getActiveJobs(1);

        return $jobs[0];
      }

      // ...
    }

![カテゴリフィード](http://www.symfony-project.org/images/jobeet/1_2/15/category_feed.png)

また明日
--------

symfonyの多くの機能と同じように、ネイティブのフォーマットサポートによって労無しで
フィードをWebサイトに追加できます。

今日は、求職者のユーザーエクスペリエンスを強化しました。
明日は、Webサービスを提供することで職の投稿者に優れた公開機能を提供する方法を見ることになります。

__ORM__
