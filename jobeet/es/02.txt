Día 2: El Proyecto
==================

Anteriormente en Jobeet
-----------------------

No hemos escrito una sola línea de PHP aún, pero ayer, configuramos el entorno, creando un proyecto symfony vacío, y nos aseguramos de iniciar con una buena seguridad por defecto. Si seguiste todo, tienes que buscar en la pantalla de entonces, ya que se muestra la hermosa página por defecto symfony para las nuevas aplicaciones.

![Página de Felicitaciones](http://www.symfony-project.org/images/jobeet/1_2/01/congratulations.png)

Pero quieres más. ¿Quieres saber todos los detalles de symfony para el desarrollo de aplicaciones. Por lo tanto, vamos a reanudar nuestro viaje al nirvana del desarrollo symfony.

Hoy, nos tomaremos el tiempo para describir los requisitos del proyecto Jobeet con algunos básicos mockups.

El Foco del Proyecto
--------------------

Todo el mundo está hablando de la crisis hoy en día. El desempleo está aumentando de nuevo.

Lo sé, los desarrolladores symfony no están realmente interesados y esto es porque quieren aprender symfony en primer lugar. Pero también es bastante difícil encontrar buenos desarrolladores symfony.

¿Dónde puedes encontrar un desarrollador symfony? ¿Dónde puedes anunciar tus habilidades symfony?

Necesitas encontrar una buena Bolsa de Trabajo. ¿Monster dices? Piensa de nuevo. Necesitas una Bolsa especializada. Una donde se pueda encontrar a la mejor gente, los expertos. Una donde sea fácil, rápido y divertido buscar un puesto de trabajo, u ofrecer uno.

No busques más. Jobeet es el lugar. Jobeet es un software Open-Source para Bolsas de Trabajo que sólo hace una cosa, pero la hace bien. Es fácil de usar, personalizar, ampliar, e incluir en tu sitio web. Soporta múltiples idiomas, y utiliza las últimas tecnologías Web 2.0 para mejorar la experiencia del usuario. También proporciona feeds y una API para interactuar con él 
programáticamente.

¿Ya existe? Como usuario, encontrarás un montón de Bolsas de Trabajo como Jobeet en Internet. Pero trata de encontrar una que sea Open-Source, y con especiales características como las que proponemos aquí.

¿Y quién dijo que tomará menos de 24 horas desarrollarla con symfony?
Bueno, mejor empezamos ahora mismo!

>**NOTE**
>Si realmente estás buscando un empleo con symfony o quieres convertirte en un desarrollador
>symfony, puedes ir al sitio web [symfonians](http://symfonians.net/).

Los Casos de Uso del Proyecto
-----------------------------

Antes de meternos en el código de cabeza, vamos a describir el proyecto un poco más.
Las secciones siguientes describen las características que queremos aplicar en la primera versión / iteración del proyecto con algunos Casos de Uso sencillos.

El sitio web Jobeet tiene cuatro tipo de usuarios:

 * **admin**: Él es el propietario de la página web y tiene poderes mágicos
 * **user**: Visita la página web para buscar un puesto de trabajo y se postula para uno
 * **poster**: Visita la página web para envíar/ofrecer un puesto de trabajo
 * **affiliate**: El re-publica algunos trabajos en su página web

El proyecto tiene dos aplicaciones: el **frontend** (historias F1 a F7, debajo),
donde los usuarios interactúan con el sitio web, y el **backend** (historias B1 a
B3), donde admins gestionan el sitio web.

La aplicación backend está asegurada y requiere de credenciales para acceder.

### Caso de Uso F1: En la página principal, los usuarios ven los últimos puestos de trabajo activos.

Cuando un usuario entra a la página web Jobeet, ve una lista de los empleos activos.
Los puestos de trabajo se clasifican por categoría y a continuación, por fecha de publicación (los nuevos puestos de trabajo primero). Para cada puesto de trabajo, sólo la ubicación, la posición, y la empresa se muestran.

Para cada categoría, la lista sólo muestra los primeros 10 puestos de trabajo y un enlace permite listar todos los puestos de trabajo para una determinada categoría (*Caso de Uso F2*).

En la página principal, el usuario puede refinar la lista de puestos (Caso de Uso F2), o enviar un nuevo puesto de trabajo (*Caso de Uso F5*).

![Homepage Mockup](http://www.symfony-project.org/images/jobeet/1_2/02/mockup_homepage.png)

### Caso de Uso F2: Un usuario puede solicitar todos los puestos de trabajo de una determinada categoría

Cuando un usuario hace clic en el nombre de una categoría o en un enlace "mas trabajos" en la página de inicio, verá todos los puestos de trabajo para esta categoría ordenados por fecha.

La lista está paginada, con 20 puestos de trabajo por página.

![The Category Page](http://www.symfony-project.org/images/jobeet/1_2/02/mockup_category.png)

### Caso de Uso F3: Un usuario refina la lista con algunas palabras clave

El usuario puede introducir algunas palabras clave para refinar su búsqueda. Las palabras clave pueden ser palabras se encuentra en los campos de la ubicación, la posición, la categoría, de la empresa.

### Caso de Uso F4: Un usuario hace clic en un puesto de trabajo para ver información más detallada

El usuario puede seleccionar un trabajo de la lista para ver información más detallada.

![The Job Page](http://www.symfony-project.org/images/jobeet/1_2/02/mockup_job.png)

### Caso de Uso F5: Un usuario envía un trabajo

Un usuario puede envíar un trabajo. Un puesto de trabajo está formado por varias piezas de información:

  * Compañía
  * Tipo (full-time, part-time, o freelance)
  * Logo (opcional)
  * URL (opcional)
  * Posición
  * Ubicación
  * Categoría (el usuario elige una de una lista de posibles categorías)
  * Descripción del trabajo (URL y correos electrónicos son enlazados de forma automática)
  * Cómo aplicar (URL y correos electrónicos son enlazados de forma automática)
  * Público (si el trabajo también pueden ser publicados en sitios web afiliados)
  * Email (email del oferente)

No hay necesidad de crear una cuenta para crear un puesto de trabajo.

El proceso es sencillo con sólo dos pasos: en primer lugar, el usuario rellena el formulario con toda la información necesaria para describir el trabajo y, a continuación, se valida la información con una vista previa de la página de empleo final.

Incluso si el usuario no tiene cuenta, un puesto de trabajo pueden ser modificada después, gracias a una URL concreta (protegido por un token dado al usuario cuando crea el puesto de trabajo).

Cada puesto de trabajo está en línea durante 30 días (esto es configurable por el admin - ver (*Caso de Uso B2*). Un usuario puede volver a re-activar y extender la validez de un anuncio de trabajo por 30 días extra pero sólo cuando el trabajo expira y en menos de 5 días.

![La Página de Creación de Puestos de Trabajo](http://www.symfony-project.org/images/jobeet/1_2/02/mockup_post.png)

### Caso de Uso F6: Un usuario se apunta para ser un afiliado

Un usuario necesita para re-publicar convertirse en una afiliado y ser autorizados a utilizar la API de Jobeet. Para afiliarse, debe dar la siguiente información:

  * Nombre
  * Email
  * URL del sitio web

La cuenta de afiliado debe ser activada por el admin (*Caso de Uso B3*). Una vez activada, el afiliado recibe un token para usar la API via email.

Cuando se registra, el afiliado puede también elegir los puestos de trabajo a obtener de un sub-conjunto de las categorías disponibles.

### Caso de Uso F7: Un afiliado recupera la lista activa de empleos

Un afiliado puede recuperar la actual lista de trabajos llamando a la API con su token de afiliado. La lista puede ser devuelta en formato XML, JSON o YAML.

La lista contiene la información pública disponible para un puesto de trabajo.

El afiliado también puede limitar el número de puestos de trabajo a ser devueltos, y refinar su consulta especificando una categoría.

### Caso de Uso B1: Un administrador configura el sitio web

Un administrador puede modificar las categorías disponibles en el sitio web.

También puede hacer algunos ajustes:

  * El número máximo de puestos de trabajo que figura en la página de inicio
  * Idioma de la página web
  * Número de días que un trabajo está en línea

### Caso de Uso B2: Un administrador gestiona los puestos de trabajo

Un administrador puede editar y eliminar cualquier trabajo publicado.

### Caso de Uso B3: Un administrador gestiona los afiliados

El administrador puede crear o editar los afiliados. Él es el responsable de la activación de un afiliado y también puede desactivar uno.

Cuando el administrador activa un nuevo afiliado, el sistema crea una único token para ser utilizado por ese afiliado.

Nos vemos mañana
----------------

Como para cualquier desarrollo web, nunca inicias la codificación del primer día. Necesitas reunir los requisitos primero y trabajar en un diseño mockup. Eso es lo que hemos hecho hoy.

Al igual que ayer, hoy el código se ha hecho público en el repositorio de SVN Jobeet.
Revisa la tag `release_day_02`:

    $ svn co http://svn.jobeet.org/tags/release_day_02/ jobeet/